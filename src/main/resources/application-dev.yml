spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(aoOv18ziDNAJ4K2hRBB0sbL+3bWjukjBPFFAohhGo6ggKxBN25Uppfwzq/9psAzKGrHexesJbkMGgTUQgJxpvA5xOv3eC9mGFM6b/o9UpDRf0ri7oy8hTrdbt8uNjarR0sHyM+jQLpIUXiYvw84Mjdg71yx0pCHcpJIqWDfZs1q0WE3G48BlKjN6U/ianRyKG5DtHsYzEvVI5cbAQ4PqH8g69MLOH/25hbZHtzH9vk+eyqqzrsZjU24z8apwxMha)
    username: ENC(2NF6et10c/Di3xNGyrfBP36fgtWhs8u2WiVjZiPuQNTDZ6Prh+iOu42e4QCnk4vA)
    password: ENC(wrFbSGKj8EnC96LDlPHEHUShB3lEBsoLb2JA6DJV/u5N2OMJ4U4s1SdD/BO3crtN)
    druid:
      initial-size: 2 #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 2 #最小连接池数量
      max-active: 12 #最大连接池数量
      max-wait: 8000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      time-between-eviction-runs-millis: 120000 #有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      min-evictable-idle-time-millis: 180000  #连接保持空闲而不被驱逐的最小时间
      validation-query: SELECT 1 #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
      validation-query-timeout: 5 #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      test-while-idle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      pool-prepared-statements: true #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
      #max-pool-prepared-statement-per-connection-size: 20 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      remove-abandoned: true
      log-abandoned: true
      log-different-thread: true
      filters: slf4j,stat,wall
      connection-properties: druid.stat.mergeSql=true;druid.stat.logSlowSql=true;druid.stat.slowSqlMillis=3000
      use-global-data-source-stat: true

      #连接池管理页面
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: 123456
        reset-enable: true
        allow:
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 2000
        commons-log:
          connection-log-error-enabled: true
          connection-rollback-after-log-enabled: true
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.jpeg,*.png,*.css,*.ico,*.jsp,/druid/*'
        principal-session-name: service_druid_session
        session-stat-enable: true
        session-stat-max-count: 2000
        profile-enable: true

  redis:
    host: ENC(XjxB+lfEiThXLFJX7OwLVxW5AbOAyxlFLygbSIwBExHIkubkDpqJ00WmJ9WuqcMq)
    port: 6379
    password: ENC(6QeoernnXg9CutrCFamZu6bZYnyxiTiouD0B3u4WsLwdb8sQFIgmIkbtXoVKrt5s)
    database: 0
    timeout: 10000
    lettuce:
      pool:
        max-active: 16
        max-wait: 2000
        max-idle: 8
        min-idle: 4
        time-between-eviction-runs: 180000
  cache:
    type: redis
    redis:
      use-key-prefix: true
      cache-null-values: false

# Mybatis 配置
mybatis-plus:
  type-aliases-package: com.hohenheim.java.serviceplatform.**.db.entity.*
  mapper-locations: classpath:/db/mapper/**/*Mapper.xml
  configuration:
    cache-enabled: false
    default-statement-timeout: 8
    map-underscore-to-camel-case: true
    use-generated-keys: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: true
    auto-mapping-behavior: full
    auto-mapping-unknown-column-behavior: warning
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# sa-token框架配置
sa-token:
  token-name: ServicePlatformUserToken #Token名称 (同时也是cookie名称)
  timeout: 86400                       #Token有效期，单位/秒 默认30天，-1代表永久有效（当前设置为24小时）
  activityTimeout: 86400               #Token临时有效期 (指定时间内无操作就视为token过期) （当前设置为24小时）
  is-concurrent: false                 #是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-share: false                      #在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-read-cookie: false
  is-read-body: false
  is-read-head: true
  data-refresh-period: 300             #默认dao层实现类中，每次清理过期数据间隔的时间 (单位: 秒) ，默认值30秒，设置为-1代表不启动定时清理
  token-style: random-64
  token-session-check-login: true      #获取token专属session时是否必须登录 (如果配置为true，会在每次获取token专属session时校验是否登录)
  auto-renew: true                     #是否打开自动续签 (如果此值为true, 框架会在每次直接或间接调用getLoginId()时进行一次过期检查与续签操作)
  is-print: true                        #是否在初始化配置时打印版本字符画
  is-log: true